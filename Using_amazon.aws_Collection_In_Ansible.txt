REFERENCES:

1. Install wsl - https://learn.microsoft.com/en-us/windows/wsl/basic-commands#install
https://learn.microsoft.com/en-us/windows/wsl/setup/environment

2. Install AWS CLI V2 - https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html#cliv2-linux-install


STEPS
=====

1. Install WSL (Windows Subsystem for Linux):

Open "cmd" in Administrator mode and run the below command:

wsl --install


2. Restart after the above command finishes.


3. As soon as restart completes, wsl will also start and ask to enter a username and password. This will be the admin user.

_____________________________________________________________________________________________________________

Ubuntu is already installed.
Launching Ubuntu...
Installing, this may take a few minutes...
Please create a default UNIX user account. The username does not need to match your Windows username.
For more information visit: https://aka.ms/wslusers
Enter new UNIX username: my_user
New password:
Retype new password:
passwd: password updated successfully
Installation successful!
To run a command as administrator (user "root"), use "sudo <command>".
See "man sudo_root" for details.

Welcome to Ubuntu 22.04.3 LTS (GNU/Linux 5.15.153.1-microsoft-standard-WSL2 x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage


This message is shown once a day. To disable it please create the
/home/my_user/.hushlogin file.
$

_____________________________________________________________________________________________________________


4. Once the user is created, you may open Windows Terminal (installed by default in Windows 11, version 23H2) and launch Ubuntu directly or through command prompt using:

wsl -u <username>


5. Install pip and ansible.

NOTE: First, update apt-get and then only install pip and ansible modules on python.

As root (or sudo):

# apt-get update
# apt install python3-pip

As the newly created admin user:

$ pip install ansible


6. Install zip and unzip utilities

As root user:

# apt install zip


7. Once Ansible is installed, download AWS CLI V2 and install the same.

Make sure to install boto3 and botocore modules using pip before install AWS CLI V2.
_______________________________________________________________________________________________________________________

$ pip install boto3 botocore
Defaulting to user installation because normal site-packages is not writeable
Collecting boto3
  Downloading boto3-1.35.24-py3-none-any.whl (139 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 139.2/139.2 KB 1.0 MB/s eta 0:00:00
Collecting botocore
  Downloading botocore-1.35.24-py3-none-any.whl (12.6 MB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 12.6/12.6 MB 9.8 MB/s eta 0:00:00
Collecting jmespath<2.0.0,>=0.7.1
  Downloading jmespath-1.0.1-py3-none-any.whl (20 kB)
Collecting s3transfer<0.11.0,>=0.10.0
  Downloading s3transfer-0.10.2-py3-none-any.whl (82 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 82.7/82.7 KB 6.7 MB/s eta 0:00:00
Collecting urllib3!=2.2.0,<3,>=1.25.4
  Downloading urllib3-2.2.3-py3-none-any.whl (126 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 126.3/126.3 KB 9.9 MB/s eta 0:00:00
Collecting python-dateutil<3.0.0,>=2.1
  Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)
     ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 229.9/229.9 KB 14.6 MB/s eta 0:00:00
Requirement already satisfied: six>=1.5 in /usr/lib/python3/dist-packages (from python-dateutil<3.0.0,>=2.1->botocore) (1.16.0)
Installing collected packages: urllib3, python-dateutil, jmespath, botocore, s3transfer, boto3
Successfully installed boto3-1.35.24 botocore-1.35.24 jmespath-1.0.1 python-dateutil-2.9.0.post0 s3transfer-0.10.2 urllib3-2.2.3
$

$ curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"

$ unzip awscliv2.zip

$ sudo ./aws/install
_______________________________________________________________________________________________________________________


8. Ensure that the installation is successful using:

$ aws --version
aws-cli/2.17.56 Python/3.12.6 Linux/5.15.153.1-microsoft-standard-WSL2 exe/x86_64.ubuntu.22


9. Configure aws cli as below:
________________________________________________________________________________________________________

$ aws configure
AWS Access Key ID [None]: *********************
AWS Secret Access Key [None]: ******************************************
Default region name [None]: us-east-1
Default output format [None]: table

$ aws configure list
      Name                    Value             Type    Location
      ----                    -----             ----    --------
   profile                <not set>             None    None
access_key     ******************** shared-credentials-file
secret_key     ******************** shared-credentials-file
    region                us-east-1      config-file    ~/.aws/config
$
________________________________________________________________________________________________________


10. Describe the vpc in us-east-1 region as below:
________________________________________________________________________________________________________

$ aws ec2 describe-vpcs
-------------------------------------------------------------------------------------------------------------------
|                                                  DescribeVpcs                                                   |
+-----------------------------------------------------------------------------------------------------------------+
||                                                     Vpcs                                                      ||
|+---------------+----------------+------------------+------------+---------------+-------------+----------------+|
||   CidrBlock   | DhcpOptionsId  | InstanceTenancy  | IsDefault  |    OwnerId    |    State    |     VpcId      ||
|+---------------+----------------+------------------+------------+---------------+-------------+----------------+|
||  172.31.0.0/16|  dopt-cc0d64b6 |  default         |  True      |  131747235111 |  available  |  vpc-6cc00c11  ||
|+---------------+----------------+------------------+------------+---------------+-------------+----------------+|
|||                                           CidrBlockAssociationSet                                           |||
||+------------------------------------------------------------------+------------------------------------------+||
|||                           AssociationId                          |                CidrBlock                 |||
||+------------------------------------------------------------------+------------------------------------------+||
|||  vpc-cidr-assoc-84c71eeb                                         |  172.31.0.0/16                           |||
||+------------------------------------------------------------------+------------------------------------------+||
||||                                              CidrBlockState                                               ||||
|||+-----------------------------------------+-----------------------------------------------------------------+|||
||||  State                                  |  associated                                                     ||||
|||+-----------------------------------------+-----------------------------------------------------------------+|||
$
________________________________________________________________________________________________________


11. Modify/rename the AWS profile from "default" to "my_profile" in both the config and credentials files and ensure to set two OS environment variables below:
__________________________________

$ head -1 ~/.aws/c*
==> ~/.aws/config <==
[my_profile]

==> ~/.aws/credentials <==
[my_profile]


$ export AWS_PROFILE=my_profile
$ export AWS_REGION=us-east-1

__________________________________


12. Now, create a small python file that gets the vpc details in the us-east-1 region:
_________________________________________________________

$ cat describe_vpcs.py
import boto3
import os

region = os.environ['AWS_REGION']
print('Default Region Set: ', region)
ec2 = boto3.client('ec2', region_name = region)
vpc_list = ec2.describe_vpcs()
print(vpc_list)
_________________________________________________________


13. Execute the python script and make sure that the output is the same as the one obtained using aws cli:
_______________________________________________________________________________

$ python describe_vpcs.py
Default Region Set:  us-east-1
{'Vpcs': [{'CidrBlock': '172.31.0.0/16', 'DhcpOptionsId': 'dopt-cc0d64b6', 'State': 'available', 'VpcId': 'vpc-6cc00c11', 'OwnerId': '131747235111', 'InstanceTenancy': 'default', 'CidrBlockAssociationSet': [{'AssociationId': 'vpc-cidr-assoc-84c71eeb', 'CidrBlock': '172.31.0.0/16', 'CidrBlockState': {'State': 'associated'}}], 'IsDefault': True}], 'ResponseMetadata': {'RequestId': '3fa65a94-0bd1-479d-92af-05849fb821cd', 'HTTPStatusCode': 200, 'HTTPHeaders': {'x-amzn-requestid': '3fa65a94-0bd1-479d-92af-05849fb821cd', 'cache-control': 'no-cache, no-store', 'strict-transport-security': 'max-age=31536000; includeSubDomains', 'content-type': 'text/xml;charset=UTF-8', 'content-length': '665', 'date': 'Mon, 23 Sep 2024 17:02:21 GMT', 'server': 'AmazonEC2'}, 'RetryAttempts': 0}}

_______________________________________________________________________________


14. Ensure that the amazon.aws collection is installed in ansible:
_______________________________________________________________________________

$ ansible-galaxy collection list

# /usr/local/lib/python3.10/dist-packages/ansible_collections
Collection                               Version
---------------------------------------- -------
amazon.aws                               8.2.1
ansible.netcommon                        6.1.3
ansible.posix                            1.5.4
ansible.utils                            4.1.0
ansible.windows                          2.5.0
arista.eos                               9.0.0
awx.awx                                  24.6.1
azure.azcollection                       2.7.0
check_point.mgmt                         5.2.3
chocolatey.chocolatey                    1.5.1
cisco.aci                                2.10.1
cisco.asa                                5.0.1
cisco.dnac                               6.18.0
cisco.intersight                         2.0.17
cisco.ios                                8.0.0
cisco.iosxr                              9.0.0
cisco.ise                                2.9.3
cisco.meraki                             2.18.1
cisco.mso                                2.9.0
cisco.nxos                               8.1.0
cisco.ucs                                1.11.0
cloud.common                             3.0.0
cloudscale_ch.cloud                      2.4.0
community.aws                            8.0.0
community.ciscosmb                       1.0.9
community.crypto                         2.22.0
community.digitalocean                   1.27.0
community.dns                            3.0.4
community.docker                         3.12.1
community.general                        9.4.0
community.grafana                        1.9.1
community.hashi_vault                    6.2.0
community.hrobot                         2.0.1
community.library_inventory_filtering_v1 1.0.1
community.libvirt                        1.3.0
community.mongodb                        1.7.6
community.mysql                          3.10.3
community.network                        5.0.3
community.okd                            3.0.1
community.postgresql                     3.5.0
community.proxysql                       1.6.0
community.rabbitmq                       1.3.0
community.routeros                       2.19.0
community.sap_libs                       1.4.2
community.sops                           1.9.0
community.vmware                         4.7.0
community.windows                        2.3.0
community.zabbix                         2.5.1
containers.podman                        1.15.4
cyberark.conjur                          1.3.0
cyberark.pas                             1.0.27
dellemc.enterprise_sonic                 2.5.0
dellemc.openmanage                       9.6.0
dellemc.powerflex                        2.5.0
dellemc.unity                            2.0.0
f5networks.f5_modules                    1.30.1
fortinet.fortimanager                    2.7.0
fortinet.fortios                         2.3.7
frr.frr                                  2.0.2
google.cloud                             1.4.1
grafana.grafana                          5.5.0
hetzner.hcloud                           3.1.1
ibm.qradar                               3.0.0
ibm.spectrum_virtualize                  2.0.0
ibm.storage_virtualize                   2.4.1
ieisystem.inmanage                       2.0.0
infinidat.infinibox                      1.4.5
infoblox.nios_modules                    1.6.1
inspur.ispim                             2.2.3
inspur.sm                                2.3.0
junipernetworks.junos                    8.0.0
kaytus.ksmanage                          1.2.2
kubernetes.core                          3.2.0
kubevirt.core                            1.5.0
lowlydba.sqlserver                       2.3.3
microsoft.ad                             1.7.1
netapp.cloudmanager                      21.22.1
netapp.ontap                             22.12.0
netapp.storagegrid                       21.12.0
netapp_eseries.santricity                1.4.0
netbox.netbox                            3.19.1
ngine_io.cloudstack                      2.4.0
ngine_io.exoscale                        1.1.0
openstack.cloud                          2.2.0
openvswitch.openvswitch                  2.1.1
ovirt.ovirt                              3.2.0
purestorage.flasharray                   1.31.1
purestorage.flashblade                   1.18.0
sensu.sensu_go                           1.14.0
splunk.es                                3.0.0
t_systems_mms.icinga_director            2.0.1
telekom_mms.icinga_director              2.1.2
theforeman.foreman                       4.2.0
vmware.vmware                            1.5.0
vmware.vmware_rest                       3.1.0
vultr.cloud                              1.13.0
vyos.vyos                                4.1.0
wti.remote                               1.0.8
_______________________________________________________________________________


15. Create a playbook to get the VPC information in us-east-1 region.
_______________________________________________________________________________

$ cat get_vpc_info.yaml
---
  - hosts: localhost
    gather_facts: False
    vars:
      #ec2_region: "{{ aws_region | default('us-east-1') }}"

    tasks:
      - name: Get all VPC Info
        amazon.aws.ec2_vpc_net_info:
            #region: "{{ec2_region}}"
        register: all_vpcs
_______________________________________________________________________________


16. Execute the playbook to get the vpc info in the region - us-east-1 and ensure that the output matches the aws cli and python script output.
________________________________________________________________________________________________

$ ansible-playbook get_vpc_info.yaml
[WARNING]: No inventory was parsed, only implicit localhost is available
[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

PLAY [localhost] ******************************************************************************************************************************************************

TASK [Get all VPC Info] ***********************************************************************************************************************************************
ok: [localhost]

TASK [debug] **********************************************************************************************************************************************************
ok: [localhost] => {
    "all_vpcs": {
        "changed": false,
        "failed": false,
        "vpcs": [
            {
                "cidr_block": "172.31.0.0/16",
                "cidr_block_association_set": [
                    {
                        "association_id": "vpc-cidr-assoc-84c71eeb",
                        "cidr_block": "172.31.0.0/16",
                        "cidr_block_state": {
                            "state": "associated"
                        }
                    }
                ],
                "dhcp_options_id": "dopt-cc0d64b6",
                "enable_dns_hostnames": true,
                "enable_dns_support": true,
                "id": "vpc-6cc00c11",
                "instance_tenancy": "default",
                "is_default": true,
                "owner_id": "131747235111",
                "state": "available",
                "tags": {},
                "vpc_id": "vpc-6cc00c11"
            }
        ]
    }
}

PLAY RECAP ************************************************************************************************************************************************************
localhost                  : ok=2    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0

$

________________________________________________________________________________________________
